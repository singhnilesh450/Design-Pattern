The Factory pattern is a creational pattern that provides a template that can be used
to create objects. It is used in complex situations where the type of the object required
varies and needs to be specified in each case.

It does not use the new keyword directly to instantiate objects.
This means that it does not explicitly require the use of a constructor to create objects.
Instead, it provides a generic interface that delegates the object creation responsibility
to the corresponding subclass.

The factory design pattern is used when we have a superclass with multiple sub-classes and based on input,
we need to return one of the sub-class. This pattern takes out the responsibility of the instantiation of
a class from the client program to the factory class. Letâ€™s first learn how to implement a factory design
pattern in java and then we will look into factory pattern advantages. We will see some of the factory
design pattern usage in JDK. Note that this pattern is also known as Factory Method Design Pattern.

when to use :-
When the type of objects required cannot be anticipated beforehand.
When multiple objects that share similar characteristics need to be created.
When you want to generalize the object instantiation process, since the object set up is complex in nature.